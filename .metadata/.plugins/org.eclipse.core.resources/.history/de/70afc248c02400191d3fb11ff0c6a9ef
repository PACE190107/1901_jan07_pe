package com.revature.dao;

import java.util.List;

import com.revature.data.DataSource;
import com.revature.exception.TodoNotFoundException;
import com.revature.model.Todo;

public class TodoDaoImpl implements TodoDao {

	//select * from todos
	public List<Todo> getAllTodos() {
		return DataSource.getTodoTable();
	}

	//select * from todos where id = id
	public Todo getTodoById(int id) {
//		for (Todo todo: dataSource.getTodoTable())
//			if (todo.getId() == id)
//				return todo;
//			throw new Todo?NotFoundException(id);
		return DataSource.getTodoTable().stream().
				filter(todo -> todo.getId() == id).findFirst()
				.orElseThrow(() -> new TodoNotFoundException(id));
	}

	public Todo createTodo(Todo todo) {
		if (DataSource.getTodoTable().add(todo)) {
			return todo;
		}
		return null;
	}

	public Todo updateTodo(Todo todo) {
		//get a reference to existing todo
		Todo updated = getTodoById(todo.getId());
		updated.setBody(todo.getBody());
		updated.setTitle(todo.getTitle());
		//store the updated version
		for (int i = 0; i < DataSource.getTodoTable().size(); i++) {
			if (DataSource.getTodoTable().get(i).getId() == todo.getId()) {
				DataSource.getTodoTable().set(i, updated);
				return updated;
			}
		}
		return null;
	}

	public Todo deleteTodo(int id) {
		//reference existing id
		Todo toBeRemoved = getTodoById(id);
		//for every todo in table, move if todo's id queals the parameter
		DataSource.getTodoTable().removeIf(anything -> anything.getId());
		return toBeRemoved;
	}

}
